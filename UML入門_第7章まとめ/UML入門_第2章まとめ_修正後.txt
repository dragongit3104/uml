オブジェクト指向とは
　　
  オブジェクト
    目に目えるオブジェクトや目に見えないオブジェクトが含まれる
    例)目に見えるもの：人、動物
       目に見えないもの：売上、イベント情報
    データだけでなく、操作(振る舞い)情報も所持
    クラスを具現化したものである。
    
  クラス
    オブジェクトの属性や操作の共通性に着目して、オブジェクトを抽象化した概念である。
    クラスから生成されたオブジェクトは、全て同じ属性や操作を持っている

  カプセル化
    プログラムを公開部分と非公開部分に分ける仕組みである。
    公開部分に参照できるようにしておくことで、非公開部分が変わったとしても影響を受けないため、バグを減らすことができる。

  継承
    クラスが持っている構造や操作をほかのクラスに引き継ぐことである
    親クラスのことをスーパークラス、子クラスのことをサブクラスと呼んでいる
    「is - a」の関係と呼ばれる
    →「人は哺乳類である」のように、「AはBである」の関係性が成り立つ

  ポリモーフィズム
     同じ命令を送っても、クラスによって固有の処理が行われること
     保守拡張性の高いシステム開発が可能となる
     ポリモーフィズムを実現するにはオーバーライドを使用する
UML
  
  1997年にOMG(Object Management Group)によって、バージョン1.0が発表される
  度々内容が見直され、バージョンアップが行われている。現在の最新バージョンは2.5.1である。

  OMT、Booch、Objectory法等の様々な開発方法論が存在していた。
  これらの開発方法論を唱えた3人のことを別名、スリーアミーゴと呼ばれる
  スリーアミーゴが中心となって、UMLが開発された。

  ソフトウェア開発で特に利用されるのは「ユースケース図」「クラス図」「相互作用図」「ステートマシン図」である。

図の種類

  ユースケース図
    システムの機能と機能に関係する外部要因をユーザ視点で可視化したものである。

  クラス図
    システムの静的な構造を表現したものである。プログラムで作成するクラスを図にあらわしたものと考えるとわかりやすい。

  シーケンス図
    クラスやオブジェクトの相互作用を時間系列で表したものである。

  コミュニケーション図
    オブジェクト間同士の関係を表したものである。
  
  ステートマシン図
    状態の変化を表したものである。

  アクティビティ図
    一連の処理の流れを開始から終了までをアクションで表したものである。

  パッケージ図
    クラス図よりも大きな視点で関係性を表したものである。クラスをまとめてグループ化したものをパッケージと呼んでいる。

  オブジェクト図
    クラス図と違って、具体的にオブジェクト間のつながりを表したものである。

  コンポーネント図
    コンポーネント(システムやファイル等)間の依存関係を表したものである。

  配置図
    システムの物理的側面(ハードウェアやソフトウェア)を表したものである。

  合成構造図
    クラスやコンポーネントの内部構造をより詳細に表したものである。

  タイミング図
    オブジェクトやクラスの状態を時間軸で表現したものである。

  相互作用概要図
    システム全体の流れを俯瞰的に表したものである。他の処理内容はユースケース図やシーケンス図で記載する。

UMLの共通要素

  ノート
    モデル要素にコメントを付加するための表記である。
  
  フレーム
    可視化対象の図を短形で囲み、種類と名称を付加して表現したものである

  ステレオタイプ
    基本的にUMLは様々な図記号で表現するが、表現が不十分な場合はステレオタイプを使って表すことがある。
    その際、名称をギュメ(<< >>)で括って表現する。
　　ギュメの中で定義する名称はUMLで既に定義されているものがあるが、独自で定義することも可能である。

  メタ属性
    中かっこ({})で囲んだ構文で表現する。モデル要素に意味を付加することができる。

  制約
    メタ属性と同様に、中かっこに制約をつけることで表現することができる。

  タイプとインスタンス
    タイプとは雛形となるモデル要素を指し、タイプの具体例となるモデル要素のことをインスタンスと呼んでいる。