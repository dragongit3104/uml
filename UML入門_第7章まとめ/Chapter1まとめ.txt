UML(Unified Modeling Language)
…ソフトウェアの成果物を、仕様化・図式化するのに使用する言語
　表記法に関する部分を標準化したもの

規定される図
・ユースケース図：システムが外部に提供する機能を表現する図
　　　　　　　　　ユーザーがシステムに対して要求する機能、動作を捉えるため使う。
・クラス図：システム化する領域の概念や言語を用いて、静的に表現する図
　　　　　　ユーザー視点で、どのようなものや概念があるかに着目して作成する。
・振る舞い図
  ・相互作用図(オブジェクト同士のやり取りを表現する図)
  　　・シーケンス図：上から下へ番号順にメッセージの流れを表す
  　　・コラボレーション図：オブジェクトを中心にメッセージのやり取りを表す
  ・ステートチャート図：1つのオブジェクトの、生成から消滅までのライフサイクルにおける
  　　　　　　　　　　　状態を表す
  ・アクティビティ図：システムや業務の流れを表現する。
  　　　　　　　　　　使用目的は特定されない。
・実装図
　・コンポーネント図：ソースコード、バイナリファイル、実行ファイルなどの
　　　　　　　　　　　ソフトウェアコンポーネントの依存性を表現する図
　・配置図：システム実行時のコンピュータシステムの構成を表現する図
　　
ノートとは
…UMLの要素に対して、注釈、制約等情報を付加する場合に使用する。

インスタンスの表記方法
…インスタンス要素の名前に下線を引く。
　型名がある場合、それにも下線を引く。

ステレオタイプとは
…UMLの基本要素だけで表現できないものについて、表現したい時に使用する。
　使用に際してのルールは下記の通り
　・ギュメ「<< >>」で囲む。
　・UML要素の名前上部、または前方に置く

パッケージとは
…UMLで定義されたモデル要素をまとめるのに使用する。
　UMLのモデル要素全てを含むことが可能。
　使用に際してのルールは下記の通り
　・パッケージの中にパッケージを書く場合、パッケージ名をタブの中に書く
　・パッケージ同士の参照関係は、矢印付きの点線でつなぐ

モデリングの意義
…関係者にこれから作成するものを明らかにすること。

オブジェクトの特徴
・状態を持つ
・振る舞いを持つ

カプセル化とは
…全ての情報を開示せず、決められた操作のみで、内部のデータにアクセスすること
　公開部分と非公開部分に分けること
　メリット：外部からの不正なアクセスを防止する
　　　　　　実装を変更してもクライアントに影響を与えないため、モジュールの変更
　　　　　　拡張が容易である

集約とは
…あるオブジェクトが他のオブジェクトの一部であったり、
　他のオブジェクトを持っていたりする関係のこと
　「Has-A」「Part−Of」の関係で表現される。

ポリモフィズムとは
…同じメッセージを送った場合、受ける側のオブジェクトが
　それぞれのやり方でメッセージを処理し異なった反応を見せること。
　一つのインターフェースのもとに、様々な実装を隠すことができる。
　これにより、保守拡張性の高いシステムの開発が可能となる。

継承とは
…一つのクラスの性質をすべて引き継いだうえで、更に性質を加えた新しい
　クラスを作成すること。
　「Is−A」の関係で表現される。
　汎化：共通の性質に着目し、より一般的なクラスを定義すること
　特化：独自の性質に着目し、特殊化されたクラスを定義すること

